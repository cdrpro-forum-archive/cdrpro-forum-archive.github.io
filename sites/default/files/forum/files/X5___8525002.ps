%!PS-Adobe-3.0
%%Title: Безымянный-1
%%Creator: CorelDRAW
%%CreationDate: Thu Sep 09 17:53:48 2010
%%BoundingBox: 0 0 113 283
%%LanguageLevel: 3
%%DocumentProcessColors: (atend)
%%DocumentSuppliedResources: (atend)
%%Pages: (atend)
%%EndComments

[{
%%BeginFeature: *JobPatchFile 1

%
% PPD HD_Herkules_8.1 as of Mon Jun 21 14:46:36 2004
%
%%BeginFile: HD_PatchFile
userdict begin
	/HDHDHDConfigError {
	  //$error begin
		/newerror  true  def
		/errorname load  100 string cvs
		(configurationerror) eq {
			(\n%%[ Error: ) print /errorname load  100 string cvs print
			(; OffendingCommand: ) print /command   load  100 string cvs  print
			(; ErrorInfo: ) print errorinfo dup 0 get =print ( [ ) print
			1 get dup 0 get =print ( ) print 1 get =print ( ]) print ( ]%%) print
			(\n%%[\tError: page size too large or orientation wrong]%%\n) print
			currentfile flushfile flush
		} if
   end
 } bind def
end

/product where {/product get (Linotype) eq}{false} ifelse
{
/HDBlackOverprint /ProcSet resourcestatus {
	pop pop 
	userdict /OVP_version known not {
		userdict /TempError 20 string  put 
		save (BGHDHDHDHDBG) mark {false /HDBlackOverprint /ProcSet findresource /Install get exec} stopped {
			{cleartomark dup (BGHDHDHDHDBG) eq {pop exit} if} loop
			$error /errorname get 20 string cvs TempError copy userdict exch /TempError exch put
			restore
			userdict /HDOvpErrorMsg
			[(\n+=============================================\n)
			   (| WARNING: Black Overprint or RGB-Black UCR   \n)
			   (| do not work due to:                         \n)
			   (|  Installation of HDBlackOverprint failed!   \n)
			   (|      PostScript error: ) TempError         (\n)
			   (+=============================================\n\n)
			]  put
			
		}{
			{cleartomark (BGHDHDHDHDBG) eq {exit} if} loop pop
		} ifelse
	} if
}{
	userdict /HDOvpErrorMsg
	[(\n+===============================================\n)
	   (| WARNING: Black Overprint or RGB-Black UCR     \n)
	   (| do not work due to:                           \n)
	   (|      HDBlackOverprint Resource not found!     \n)
	   (|                                               \n)
	   (| Please download the file HDBlackOverprint.ps  \n)
	   (+===============================================\n\n)
	] put
} ifelse
}{
	userdict /HDOvpErrorMsg [()]  put
} ifelse
%%EndFile: HD_PatchFile

%%EndFeature
} stopped cleartomark

%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks false def
/DocPsLevel 3 def
%Build: CorelDRAW Версия 15.1.0.588
%Option: Separations
%Option: Emulsion up
%Option: Positive
/SeparateInColor false def
/SeparationMode /OnHost def
/SeparationPlateName null def
%%BeginResource: procset wCorel15Dict 15.0 0
/wCorel15Dict 300 dict def wCorel15Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparation/LumSepsDict where
{pop false}{/AldusSepsDict where{pop false}{InRipSeparation{true}{1 0 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not}ifelse
}ifelse}ifelse def/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{
deviceinfo/Colors get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict
/processcolors known{statusdict/processcolors get exec 1 gt}{false}ifelse}{
false}ifelse}ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode
/OnHost ne InRipSeparation AdobeDistiller or and}bind}{false}ifelse def
/DocGrayScaleSpace[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace
[/DeviceCMYK]def/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[
0.9637 1.0000 0.8241]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116
div}bind{500 div}bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[
{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul
}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000
mul}bind{dup 0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse
0.8241 mul}bind]>>]def/validate_cie_colorspace_whitepoint{load dup aload pop
/WhitePoint get 1 1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE
where{pop/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint
/DocGrayScaleSpace xd DocGrayScaleSpace aload pop begin pop/DecodeA where{pop
DecodeA type/arraytype eq{DecodeA aload pop/DecodeA exch def}if}if end}if
/DocRgbSpaceCIE where{pop/DocRgbSpaceCIE validate_cie_colorspace_whitepoint
/DocRgbSpace xd}if/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE
validate_cie_colorspace_whitepoint/DocCmykSpace xd}if}bd/set_rendering_intent{
Level3{findcolorrendering{/ColorRendering findresource setcolorrendering}{dup
/DefaultColorRendering eq{pop}{/ColorRendering findresource setcolorrendering}
}ifelse}{pop}ifelse}bd/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5
array astore}def}ifelse/setcustomcolor where SeparationMode/OnHost ne and{pop}
{/tint_cmyk_color{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}
ifelse}bd/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll
pop pop pop 1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch
aload pop SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{
CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd
}ifelse/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}
repeat 3 copy min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd
/safe_setcolorspace{dup currentcolorspace eq{pop}{setcolorspace}ifelse}bd
/safe_setoverprint{dup type/booleantype eq{dup currentoverprint ne{
setoverprint}{pop}ifelse}{1 eq setoverprint}ifelse}bd/is_cmyk_channel_name{
/channel_name xd channel_name/Cyan eq channel_name/Magenta eq or channel_name
/Yellow eq or channel_name/Black eq or{true}{false}ifelse}bd
/is_rgb_channel_name{/channel_name xd channel_name/Red eq channel_name/Green eq
or channel_name/Blue eq or{true}{false}ifelse}bd/is_spot_channel_name{
/channel_name xd channel_name is_cmyk_channel_name channel_name
is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse}bd
/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSpace safe_setcolorspace color aload pop setcolor}bd/separate_set_color{
SeparationMode/OnHost eq{separate_color{/set_color dexec true}{pop
currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1 SetGry true}
ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{currentdict false
}bd/convert_to_cmyk{currentdict}bd currentdict end def/GrayscaleColorSpec
ColorSpec 9 dict copy begin/names{/Black}def/num 1 def/ColorModel/Grayscale def
/ColorSpace DocGrayScaleSpace def/separate_color{SeparationMode/OnHost eq{
SeparationPlateName/Black eq{SeparateInColor{convert_to_cmyk true}{currentdict
true}ifelse}{currentdict false}ifelse}{currentdict false}ifelse}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9 dict copy begin
/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk def/ColorSpace
DocCmykSpace def/separate_color{currentdict false SeparationPlateIndex 0 ge
SeparationPlateIndex 3 le and{color SeparationPlateIndex get dup 0 gt{3 1 roll
pop pop SeparateInColor{0 0 0 4 SeparationPlateIndex roll create_cmyk_color
true}{1 exch sub create_grayscale_color true}ifelse}{pop}ifelse}if}bd
/convert_to_cmyk{currentdict}bd currentdict end def/create_cmyk_color{
CmykColorSpec 9 dict copy begin 4 array astore/color exch def/ColorSpace
DocCmykSpace def currentdict end}bd/SpotColorSpec ColorSpec 9 dict copy begin
/num 1 def/ColorModel/Spot def/separate_color{currentdict false
SeparationPlateIndex 4 eq{names aload pop SeparationPlateName eq{pop pop color
aload pop dup 0 gt{SeparateInColor{pop convert_to_cmyk true}{1 exch sub
create_grayscale_color true}ifelse}if}if}if}bd/convert_to_cmyk{
/alternativeSpace ColorSpace 2 get def/tintTransformProc ColorSpace 3 get def
alternativeSpace DocCmykSpace eq{color aload pop tintTransformProc
create_cmyk_color}{alternativeSpace DocRgbSpace eq{color aload pop
tintTransformProc create_rgb_color/convert_to_cmyk dexec}{alternativeSpace
DocGrayScaleSpace eq{0 0 0 color aload pop 1 sub create_cmyk_color}if}ifelse}
ifelse}bd currentdict end def/create_spot_colorspace{load/alternativeSpace xd
/alternativeColor xd/name xd[/Separation name alternativeSpace[
alternativeColor alternativeSpace/spot_tint_transform_proc cvx]cvx]}bd
/create_spot_color{SpotColorSpec 9 dict copy begin dup type/arraytype ne{
create_spot_colorspace}if/ColorSpace xd/color exch 1 array astore def
ColorSpace 1 get 1 array astore/names xd currentdict end}bd/DevicenColorSpec
SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def/set_color{Level3{
ColorSpace safe_setcolorspace color aload pop setcolor}{ColorSpace 2 get
setcolorspace color aload pop ColorSpace 3 get exec setcolor}ifelse}bd
/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup names
exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex 0 ge
{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/separate_color{SeparateInColor{convert_to_cmyk true}{color
aload pop 1 exch sub create_grayscale_color true}ifelse}bd/convert_to_cmyk{
color aload pop dup dup dup create_cmyk_color}bd currentdict end def
/create_registration_color{RegistrationColorSpec 9 dict copy begin 1 array
astore/color xd currentdict end}bd/LabColorSpec ColorSpec 9 dict copy begin
/names{/L/a/b}def/num 3 def/ColorModel/Lab def/ColorSpace DocLabSpace def
/separate_color{convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{0 0 0 0
create_cmyk_color}bd currentdict end def/create_lab_color{LabColorSpec 9 dict
copy begin 3 array astore/color exch def/ColorSpace DocLabSpace def currentdict
end}bd/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd
}bd/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{
@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/setcmykcolor{create_cmyk_color/separate_set_color dexec
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}bd
/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi string def DevicenImage{/readstrip{DataSource stripBuffer
readhexstring pop}bd}{/readstrip{DataSource stripBuffer readstring pop}bd
}ifelse/stripHeight $lly $ury sub stripRows mul $hei div def/stripOutBuffer
$wid stripRows mul numPlanes mul string def/strip_img_dict 8 dict def
strip_img_dict begin/ImageType 1 def/Width $wid def/Height stripRows def
/BitsPerComponent $bts def/Decode[numPlanes{0 1}repeat]def/ImageMatrix[$wid 0 0
stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]def/DataSource stripOutBuffer def
end}bd/separate_output_color_image{/plateContent false def $ncl 1 eq{
SeparationPlateName/Black eq{output_color_image/plateContent true def}if}{@np
/DataSource create_datasource def SeparateInColor{DocCmykSpace setcolorspace
/numPlanes 4 def}{DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse
/stripRows 65535 $wid $bts mul $ncl numPlanes max mul div floor cvi def
numPlanes stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div
ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury
stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add
ceiling cvi def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex
stripRows mul sub set_image_strip_parameters/$t_lly $t_ury stripHeight add
ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex
xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage
{ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if $llx $lly
Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor/separate_set_color
dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}ifelse[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq{imagemask}{image}ifelse $SDF
{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}ifelse}bd
/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/$dat
$wid $bts mul $ncl mul 8 div ceiling cvi string def $msimage false eq $ncl 1 eq
or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl 3 eq{
dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def/@cc1
load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch string
def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load/@cc3 load
/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp @ss}if}bd
/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{currentfile $dat2
readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop}bd/@cc4{
currentfile $dat4 readhexstring pop}bd/$msimage false def/ImageCompression
/None def/MaskedImage false def/DevicenImage false def/output_color_image{@np
$ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse
setcolorspace/$dat $wid $bts mul $ncl mul 8 div ceiling cvi string def $ngx
$llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def
/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}
repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource create_datasource def currentdict end image $SDF{$dsf $dsa $dsp
@ss}if}bd/simulate_devicen_image{@np $ngx/colorantNames ImageDevicenSpace 1 get
def/altColorSpace ImageDevicenSpace 2 get def/tintProc ImageDevicenSpace 3 get
def/DataSource create_datasource def/stripRows 65535 $wid $bts mul $ncl mul div
floor cvi def 1 stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{1 $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs $llx $t_lly Tl $urx $llx
sub $t_ury $t_lly sub scale 0 1 $ncl 1 sub{@gs/inkIndex exch def 0 1
stripOutBuffer length 1 sub{dup $ncl mul inkIndex add stripBuffer exch get
stripOutBuffer 3 1 roll put}for[/Separation colorantNames inkIndex get
altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll tintProc}]setcolorspace
inkIndex 0 gt{true setoverprint}if strip_img_dict image @gr}for @gr}for $SDF
{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx/colorantNames
ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2 get def/tintProc
ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{/numAltChannels 4 def
}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{/numAltChannels 1 def}
ifelse}ifelse/DataSource create_datasource def altColorSpace setcolorspace
/stripRows 65535 $wid $bts mul $ncl numAltChannels max mul div floor cvi def
numAltChannels stripRows set_image_strip_parameters/maxStripIndex $hei
stripRows div ceiling cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def
/$t_ury $ury stripHeight stripIndex mul add ceiling cvi def/$t_lly $t_ury
stripHeight add ceiling cvi def stripIndex maxStripIndex eq{numAltChannels $hei
maxStripIndex stripRows mul sub set_image_strip_parameters/$t_lly $t_ury
stripHeight add ceiling cvi def}if readstrip pop @gs 0 1 $wid stripRows mul 1
sub{/pixelIndex xd stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}
forall tintProc exec numAltChannels array astore/pixelAltIndex pixelIndex
numAltChannels mul def/posColorant 0 def{stripOutBuffer pixelAltIndex
posColorant add 3 -1 roll 255 mul cvi put/posColorant posColorant 1 add def}
forall}for $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale strip_img_dict
image @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_native{@np
$ngx ImageDevicenSpace setcolorspace/scanline $wid $bts mul $ncl mul 8 div
ceiling cvi string def/readscanline{currentfile scanline readhexstring pop}
bind def $llx $lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType
1 def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl
{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource{readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}
bd/output_devicen_image{Level3{output_devicen_image_native}{
get_simulate_devicen{simulate_devicen_image}{output_devicen_image_alt}ifelse}
ifelse}bd/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi string def 0 1 $hei 1 sub{pop currentfile
scanline readhexstring pop pop}for}ifelse}bd/disable_raster_output{deflevel 0
eq{@rs}if/output_image load/output_image_original exch def/output_image
/skip_image_body load def globaldict begin/bSkipDeviceNImage true def end
deflevel 0 eq{@sv}if}def/enable_raster_output{deflevel 0 eq{@rs}if
/bSkipDeviceNImage where{/bSkipDeviceNImage undef/output_image
/output_image_original load def}if deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup

[{
%%BeginFeature: *HDErrorHandling Unchanged

% Use the Printer's Default
% PPD HD_Herkules_8.1 as of Mon Jun 21 14:46:36 2004

%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDSubstituteFont Unchanged

% Use the Printer's Default
userdict /HDSubstituteFont (Unchanged) put
%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *PageSize Letter
<</PageSize [612 792] /Orientation 1>> setpagedevice
%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDPageSizePol Abort
<</Policies << /PageSize 0 >> >> setpagedevice
%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDMirrorPrint Unchanged
% Use the Printer's Default
%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDNegativePrint Unchanged
% Use the Printer's Default
%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDSeparations Unchanged
% Use the Printer's Default
%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDOverprint Unchanged

  % HD Black Overprint
  % Use the Printer's Default

%%EndFeature
} stopped cleartomark

[{
%%BeginFeature: *HDRGB_Black Unchanged

  % HD RGB-Black UCR
  % Use the Printer's Default

%%EndFeature
} stopped cleartomark

/#copies 1 def
gsave
[{
%%BeginFeature: *Collate false
<< /Collate false>> setpagedevice
%%EndFeature
} stopped cleartomark
[{
%%BeginFeature: *NumCopies 1
<< /NumCopies 1>> setpagedevice
%%EndFeature
} stopped cleartomark
grestore
wCorel15Dict begin
@BeginSysCorelDict
CheckLevelCompatibility
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 256 def
150 45 /@dot @D
userdict begin
end
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 0 1 -1 0
%%BoundingBox: 0 0 113 283
%%PlateColor: Black
%LogicalPage: 1
%%BeginPageSetup
[{
%%BeginFeature: *PageSize
<< /PageSize [113 283] >> setpagedevice
%%EndFeature
} stopped cleartomark
/$Scra -90.0 def
0.00 283.46457 Tl
-90.0 rotate
0.00000 0.00000 Tl
/$dcm2 matrix currentmatrix def
/$dcm where{pop $dcm setmatrix}if
/$dcm2 where{pop $dcm2 setmatrix}if
@sv
/SeparationMode /OnHost def
/SeparationPlateName (Black) def
init_separation
150 45 /@dot @D
@sm
userdict begin
end
@sv
%%EndPageSetup
@rax %Note: Object
50.21008 45.71887 233.25420 67.66696 @E
/$fm 1 def
 0 O 0 @g
0.00 0.00 0.00 1.00  create_cmyk_color set_solid_fill
50.21008 50.48702 m
56.85817 59.43912 L
50.99811 67.66696 L
53.70208 67.66696 L
56.82217 63.25909 l
57.47017 62.34718 57.92995 61.64306 58.20208 61.15096 C
58.58617 61.77515 59.03802 62.42712 59.56214 63.10715 c
63.02211 67.66696 L
65.49420 67.66696 L
59.45811 59.57093 L
65.96220 50.48702 L
63.15024 50.48702 L
58.82598 56.61496 l
58.58220 56.96702 58.33417 57.35112 58.07395 57.76299 C
57.69014 57.13909 57.41802 56.71106 57.25417 56.47493 c
52.94211 50.48702 L
50.21008 50.48702 L
@c
67.11024 54.98702 m
69.32608 55.17496 L
69.49020 54.09496 69.87005 53.28709 70.46617 52.74312 c
71.06627 52.19915 71.78627 51.92702 72.63014 51.92702 c
73.64608 51.92702 74.50611 52.31112 75.20627 53.07506 c
75.91011 53.84296 76.26217 54.85918 76.26217 56.12315 c
76.26217 57.32702 75.92627 58.27493 75.25020 58.97112 c
74.57414 59.66702 73.69030 60.01512 72.59414 60.01512 c
71.91411 60.01512 71.30211 59.85893 70.75417 59.55109 c
70.20624 59.24296 69.77820 58.84299 69.46611 58.35118 C
67.48611 58.60715 L
69.15005 67.43112 L
77.69424 67.43112 L
77.69424 65.41512 L
70.83808 65.41512 L
69.91002 60.79918 L
70.94211 61.51918 72.02608 61.87918 73.15824 61.87918 c
74.65805 61.87918 75.92230 61.35902 76.95411 60.31899 c
77.98620 59.27896 78.50211 57.94299 78.50211 56.31109 c
78.50211 54.75515 78.04630 53.41096 77.14205 52.27909 c
76.03824 50.89096 74.53417 50.19506 72.63014 50.19506 c
71.06627 50.19506 69.79011 50.63102 68.80224 51.50693 c
67.81408 52.38312 67.25027 53.54306 67.11024 54.98702 C
@c
87.72208 62.93112 m
89.83417 62.93112 L
89.83417 57.75109 L
95.68205 57.75109 L
95.68205 62.93112 L
97.79017 62.93112 L
97.79017 50.48702 L
95.68205 50.48702 L
95.68205 56.00693 L
89.83417 56.00693 L
89.83417 50.48702 L
87.72208 50.48702 L
87.72208 62.93112 L
@c
109.48224 54.49493 m
111.66208 54.22706 L
111.31824 52.95090 110.68214 51.96302 109.75408 51.25890 c
108.82205 50.55902 107.63405 50.20696 106.19008 50.20696 c
104.37024 50.20696 102.92598 50.76709 101.86214 51.88706 c
100.79405 53.00702 100.26198 54.57912 100.26198 56.60306 c
100.26198 58.69899 100.80198 60.32296 101.87802 61.47893 c
102.95802 62.63518 104.35408 63.21515 106.07414 63.21515 c
107.73808 63.21515 109.09814 62.64709 110.15008 61.51493 c
111.20627 60.38306 111.73408 58.78715 111.73408 56.73515 c
111.73408 56.60702 111.73011 56.41909 111.72217 56.17106 C
102.44211 56.17106 L
102.51808 54.80306 102.90614 53.75509 103.60205 53.03112 c
104.29824 52.30290 105.16224 51.93893 106.20227 51.93893 c
106.97414 51.93893 107.63405 52.14302 108.18227 52.55093 c
108.73020 52.95515 109.16220 53.60315 109.48224 54.49493 C
@c
102.55805 57.90699 m
109.50605 57.90699 L
109.41420 58.95099 109.14605 59.73902 108.71008 60.25918 c
108.03827 61.07102 107.16605 61.47893 106.09824 61.47893 c
105.13020 61.47893 104.31411 61.15493 103.65420 60.50693 c
102.99402 59.85893 102.63005 58.99096 102.55805 57.90699 C
@c
120.19408 56.71106 m
120.19408 59.01506 120.83414 60.72293 122.11824 61.83099 c
123.18605 62.75112 124.49027 63.21515 126.03005 63.21515 c
127.74217 63.21515 129.14220 62.65502 130.22617 61.53109 c
131.31411 60.41112 131.85411 58.86312 131.85411 56.88709 c
131.85411 55.28296 131.61430 54.02296 131.13411 53.10709 c
130.65420 52.18696 129.95405 51.47490 129.03817 50.96693 c
128.11805 50.45896 127.11827 50.20696 126.03005 50.20696 c
124.29014 50.20696 122.88217 50.76312 121.80614 51.88309 c
120.73011 52.99909 120.19408 54.60718 120.19408 56.71106 c
@c
122.36202 56.71106 m
122.36202 55.11515 122.71011 53.92290 123.40602 53.13090 c
124.10220 52.33493 124.97811 51.93893 126.03005 51.93893 c
127.07802 51.93893 127.95024 52.33890 128.64614 53.13515 c
129.33808 53.93112 129.68617 55.14718 129.68617 56.77909 c
129.68617 58.31915 129.33808 59.48702 128.63820 60.27902 c
127.93805 61.07102 127.07008 61.46702 126.03005 61.46702 c
124.97811 61.46702 124.10220 61.07102 123.40602 60.28299 c
122.71011 59.49496 122.36202 58.30299 122.36202 56.71106 c
@c
132.66198 62.93112 m
142.77798 62.93112 L
142.77798 61.18696 L
138.77008 61.18696 L
138.77008 50.48702 L
136.67017 50.48702 L
136.67017 61.18696 L
132.66198 61.18696 L
132.66198 62.93112 L
@c
144.78208 62.93112 m
146.88992 62.93112 L
146.88992 57.55493 L
147.56202 57.55493 148.03398 57.68306 148.30214 57.93902 c
148.57002 58.19896 148.96602 58.94702 149.49014 60.19115 c
149.90598 61.17506 150.24189 61.82306 150.49814 62.13515 c
150.75808 62.44696 151.05402 62.65899 151.38992 62.76699 c
151.72611 62.87896 152.26611 62.93112 153.00595 62.93112 c
153.43002 62.93112 L
153.43002 61.18696 L
152.84211 61.19915 l
152.28992 61.19915 151.93389 61.11496 151.77798 60.95112 c
151.61414 60.77906 151.36214 60.26712 151.02595 59.41502 c
150.70592 58.60318 150.41395 58.04306 150.14608 57.73096 c
149.88189 57.41518 149.47002 57.13115 148.91811 56.87518 C
149.82208 56.63112 150.71414 55.78696 151.59005 54.34299 c
153.89802 50.48702 L
151.57814 50.48702 L
149.32602 54.34299 l
148.86595 55.11515 148.46202 55.62709 148.12214 55.87115 c
147.77802 56.11918 147.36614 56.23909 146.88992 56.23909 C
146.88992 50.48702 L
144.78208 50.48702 L
144.78208 62.93112 L
@c
155.29408 45.71887 m
155.29408 62.93112 L
157.21398 62.93112 L
157.21398 61.31509 L
157.66611 61.94693 158.17805 62.42315 158.75008 62.73921 c
159.31814 63.05499 160.01008 63.21515 160.82220 63.21515 c
161.88605 63.21515 162.82205 62.93906 163.63417 62.39509 c
164.44998 61.84715 165.06198 61.07499 165.47414 60.07918 c
165.89027 59.08309 166.09805 57.99118 166.09805 56.80318 c
166.09805 55.53099 165.87014 54.38296 165.41008 53.36306 c
164.95398 52.34315 164.29011 51.56306 163.41817 51.01909 c
162.54624 50.47909 161.63008 50.20696 160.66998 50.20696 c
159.96614 50.20696 159.33798 50.35493 158.77814 50.65115 c
158.21802 50.94709 157.76220 51.32296 157.40220 51.77509 C
157.40220 45.71887 L
155.29408 45.71887 L
@c
157.20208 56.63906 m
157.20208 55.03918 157.52608 53.85515 158.17408 53.08696 c
158.82208 52.32302 159.61011 51.93893 160.53024 51.93893 c
161.46624 51.93893 162.27014 52.33493 162.93798 53.13090 c
163.60611 53.92290 163.94202 55.15115 163.94202 56.81509 c
163.94202 58.40306 163.61405 59.58709 162.96208 60.37909 c
162.31011 61.16712 161.53002 61.56312 160.62605 61.56312 c
159.72605 61.56312 158.93008 61.14302 158.23814 60.30312 c
157.54620 59.46293 157.20208 58.23893 157.20208 56.63906 c
@c
180.48614 62.93112 m
182.59824 62.93112 L
182.59824 50.48702 L
180.48614 50.48702 L
180.48614 62.93112 L
@c
168.68608 62.93112 m
170.79817 62.93112 L
170.79817 58.07112 L
173.47011 58.07112 l
175.21030 58.07112 176.55420 57.73096 177.49417 57.05518 c
178.43414 56.37912 178.90611 55.44709 178.90611 54.25909 c
178.90611 53.22302 178.51408 52.33096 177.72605 51.59509 c
176.94227 50.85496 175.68624 50.48702 173.96220 50.48702 c
168.68608 50.48702 L
168.68608 62.93112 L
@c
170.79817 52.22296 m
173.01005 52.22296 l
174.34630 52.22296 175.30214 52.38709 175.87020 52.71506 c
176.44224 53.04302 176.72627 53.55496 176.72627 54.24690 c
176.72627 54.78718 176.51424 55.26709 176.09414 55.69115 c
175.67008 56.11096 174.73805 56.32299 173.29408 56.32299 c
170.79817 56.32299 L
170.79817 52.22296 L
@c
185.90202 62.93112 m
190.76598 62.93112 l
191.96220 62.93112 192.85002 62.83106 193.43424 62.63518 c
194.01420 62.43506 194.51424 62.07109 194.93405 61.53902 c
195.35017 61.00696 195.56220 60.37115 195.56220 59.62706 c
195.56220 59.03518 195.43805 58.51502 195.19002 58.07509 c
194.94624 57.63515 194.57405 57.26296 194.08224 56.96702 C
194.67014 56.77115 195.15402 56.40718 195.54208 55.87115 c
195.93014 55.33512 196.12205 54.70299 196.12205 53.96712 c
196.04608 52.78706 195.62202 51.91115 194.85808 51.34309 c
194.09017 50.77106 192.97814 50.48702 191.51802 50.48702 c
185.90202 50.48702 L
185.90202 62.93112 L
@c
188.01411 57.69496 m
190.26198 57.69496 l
191.16198 57.69496 191.77824 57.73918 192.11414 57.83499 c
192.45005 57.92712 192.75024 58.11902 193.01811 58.40306 c
193.28202 58.68709 193.41411 59.03093 193.41411 59.42693 c
193.41411 60.08315 193.18224 60.54293 192.71820 60.79918 c
192.25417 61.05912 191.45820 61.18696 190.33398 61.18696 c
188.01411 61.18696 L
188.01411 57.69496 L
@c
188.01411 52.22296 m
190.79008 52.22296 l
191.98602 52.22296 192.80608 52.35902 193.24998 52.63909 c
193.69814 52.91490 193.93002 53.39509 193.95411 54.07115 c
193.95411 54.47112 193.82598 54.83906 193.56605 55.17893 c
193.31008 55.51909 192.97417 55.73509 192.56202 55.82296 c
192.14617 55.91509 191.48202 55.95902 190.56614 55.95902 c
188.01411 55.95902 L
188.01411 52.22296 L
@c
206.49827 52.02312 m
205.71420 51.35896 204.96217 50.89096 204.24217 50.61515 c
203.51820 50.34302 202.74208 50.20696 201.91408 50.20696 c
200.54608 50.20696 199.49811 50.53890 198.76224 51.20702 c
198.03005 51.87515 197.66211 52.73093 197.66211 53.76699 c
197.66211 54.37899 197.79817 54.93515 198.07824 55.43915 c
198.35405 55.94315 198.71802 56.34709 199.16617 56.65096 c
199.61802 56.95512 200.12202 57.18699 200.68611 57.34318 c
201.09827 57.45118 201.72217 57.55918 202.55811 57.65896 c
204.26230 57.86306 205.51805 58.10315 206.32224 58.38718 C
206.33017 58.67518 206.33414 58.85915 206.33414 58.93512 c
206.33414 59.79515 206.13430 60.40318 205.73405 60.75099 c
205.19830 61.23118 204.39411 61.46702 203.33424 61.46702 c
202.34211 61.46702 201.61020 61.29496 201.13427 60.94715 c
200.66202 60.59906 200.31420 59.98309 200.08602 59.09896 C
198.02608 59.38299 L
198.21402 60.26315 198.52214 60.97918 198.95017 61.51918 c
199.37820 62.06315 200.00211 62.48296 200.81424 62.77521 c
201.62608 63.06718 202.56605 63.21515 203.63811 63.21515 c
204.70224 63.21515 205.56227 63.08702 206.22614 62.83899 c
206.89030 62.58699 207.37814 62.27518 207.69420 61.89506 c
208.00630 61.51493 208.22230 61.03899 208.35014 60.45902 c
208.41817 60.09902 208.45417 59.45102 208.45417 58.51502 c
208.45417 55.70306 l
208.45417 53.73893 208.49811 52.49906 208.59024 51.98315 c
208.67811 51.46299 208.85811 50.96296 209.12230 50.48702 C
206.91808 50.48702 L
206.70208 50.92299 206.55808 51.43493 206.49827 52.02312 C
@c
206.32224 56.73515 m
205.55405 56.41909 204.40630 56.15518 202.87814 55.93493 c
202.01017 55.81106 201.39420 55.67102 201.03817 55.51512 c
200.67817 55.35893 200.39811 55.13102 200.20620 54.82715 c
200.01005 54.52696 199.91027 54.19502 199.91027 53.82709 c
199.91027 53.26299 200.12627 52.79499 200.55005 52.41912 c
200.97411 52.04693 201.59830 51.85899 202.41808 51.85899 c
203.23020 51.85899 203.95417 52.03502 204.58630 52.39106 c
205.21814 52.74709 205.68614 53.23493 205.98208 53.85090 c
206.21027 54.32712 206.32224 55.03096 206.32224 55.95902 c
206.32224 56.73515 L
@c
220.24233 54.49493 m
222.42217 54.22706 L
222.07833 52.95090 221.44224 51.96302 220.51417 51.25890 c
219.58214 50.55902 218.39414 50.20696 216.95017 50.20696 c
215.13033 50.20696 213.68608 50.76709 212.62224 51.88706 c
211.55414 53.00702 211.02208 54.57912 211.02208 56.60306 c
211.02208 58.69899 211.56208 60.32296 212.63811 61.47893 c
213.71811 62.63518 215.11417 63.21515 216.83424 63.21515 c
218.49817 63.21515 219.85824 62.64709 220.91017 61.51493 c
221.96636 60.38306 222.49417 58.78715 222.49417 56.73515 c
222.49417 56.60702 222.49020 56.41909 222.48227 56.17106 C
213.20220 56.17106 L
213.27817 54.80306 213.66624 53.75509 214.36214 53.03112 c
215.05833 52.30290 215.92233 51.93893 216.96236 51.93893 c
217.73424 51.93893 218.39414 52.14302 218.94236 52.55093 c
219.49030 52.95515 219.92230 53.60315 220.24233 54.49493 C
@c
213.31814 57.90699 m
220.26614 57.90699 L
220.17430 58.95099 219.90614 59.73902 219.47017 60.25918 c
218.79836 61.07102 217.92614 61.47893 216.85833 61.47893 c
215.89030 61.47893 215.07420 61.15493 214.41430 60.50693 c
213.75411 59.85893 213.39014 58.99096 213.31814 57.90699 C
@c
223.13820 62.93112 m
233.25420 62.93112 L
233.25420 61.18696 L
229.24630 61.18696 L
229.24630 50.48702 L
227.14639 50.48702 L
227.14639 61.18696 L
223.13820 61.18696 L
223.13820 62.93112 L
@c
F

 @gs spg @gr
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: procset wCorel15Dict 15.0 0
%%Pages: 1
%%EOF
